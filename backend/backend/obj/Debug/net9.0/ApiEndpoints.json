[
  {
    "ContainingType": "backend.Controllers.AIController",
    "Method": "PingAiServer",
    "RelativePath": "api/AI/ping-ai",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.AIController",
    "Method": "ProcessFileAndPrompt",
    "RelativePath": "api/AI/process",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ContentType",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "ContentDisposition",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Headers",
        "Type": "Microsoft.AspNetCore.Http.IHeaderDictionary",
        "IsRequired": false
      },
      {
        "Name": "Length",
        "Type": "System.Int64",
        "IsRequired": false
      },
      {
        "Name": "Name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "FileName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "prompt",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.AIController",
    "Method": "UploadNote",
    "RelativePath": "api/AI/upload",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "note",
        "Type": "backend.Models.DTOs.NoteDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.AuthenticationController",
    "Method": "Login",
    "RelativePath": "api/Authentication/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "backend.Models.DTOs.LoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.AuthenticationController",
    "Method": "Signup",
    "RelativePath": "api/Authentication/signup",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "backend.Models.DTOs.SignupRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ChatController",
    "Method": "GetHistory",
    "RelativePath": "api/Chat/{groupId}/history",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.ChatController",
    "Method": "SendMessage",
    "RelativePath": "api/Chat/send",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "backend.Models.DTOs.ChatMessageRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.GroupsController",
    "Method": "CreateGroup",
    "RelativePath": "api/Groups",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "backend.Models.DTOs.GroupCreateRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.GroupsController",
    "Method": "DeleteGroup",
    "RelativePath": "api/Groups/{groupId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "backend.Models.DTOs.DeleteGroupRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.GroupsController",
    "Method": "GetGroup",
    "RelativePath": "api/Groups/{groupId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.GroupsController",
    "Method": "RenameGroup",
    "RelativePath": "api/Groups/{groupId}/rename",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "groupId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "backend.Models.DTOs.RenameGroupRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.GroupsController",
    "Method": "JoinGroup",
    "RelativePath": "api/Groups/join",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "backend.Models.DTOs.JoinGroupRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.IdeasController",
    "Method": "CreateIdea",
    "RelativePath": "api/Ideas",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "backend.Models.DTOs.IdeaCreateRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.IdeasController",
    "Method": "GetIdea",
    "RelativePath": "api/Ideas/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.IdeasController",
    "Method": "UpdateIdea",
    "RelativePath": "api/Ideas/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "backend.Models.DTOs.IdeaUpdateRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.IdeasController",
    "Method": "DeleteIdea",
    "RelativePath": "api/Ideas/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "backend.Models.DTOs.IdeaDeleteRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.VotesController",
    "Method": "CastVote",
    "RelativePath": "api/Votes",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "backend.Models.DTOs.VoteRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.VotesController",
    "Method": "GetCounts",
    "RelativePath": "api/Votes/idea/{ideaId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ideaId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.WeatherForecast, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]