{"docstore/metadata": {"7e657534-c1e3-4e90-b675-f512ede0a20c": {"doc_hash": "64a847baaa3ecaa21b72dc03df591a4c70cc5fb6208838e35f03e6762f5af053"}, "976013c9-a49c-4ea3-b9cb-7be28fb5cfa1": {"doc_hash": "79c825461aa23eae36e6cdd2be910aae9d11e8186da102ea24788cb97b0b043f"}, "26631ee7-d7d6-4706-b1e4-faa34d88b36d": {"doc_hash": "37f0d0fbe59508018fb59a9af2d2239cacc4b0158e9b78af273e6b58f9990a62"}, "ea3d2c17-7e5d-4507-9425-da766ef8fc30": {"doc_hash": "fbf870365ebae77daf3f7484afabed39b03310c3c21e970e56e19813c24fa44b"}, "7fdbce16-b498-499a-9e84-45ae2b35e253": {"doc_hash": "c2be01cc96caa46171b190e97ee19ccee0cd88a57078f8900900258fa2c849fd"}, "ef2ece88-80d2-4f82-b045-39192e68395c": {"doc_hash": "38b80b0c726c8d365a7b301939771af50b0491267b0b2880b73ddfbf2e62bd42"}, "58bc84a8-947c-4d86-9990-e4b527cae86a": {"doc_hash": "6b83e4898133a313ced801374bb8b6a38946698f5b56830a08ac4446ef332414"}, "479586dc-de57-4129-83d0-956f49f509e8": {"doc_hash": "64ae9ba2c5c223a2988b7d9363eb6ed4f41772904b33d2a3b14532d1d5b3398b"}, "437f9bf9-9544-4742-a310-ea7ad5bf546b": {"doc_hash": "3321af0ff1a966bb02e6696f4379c990387796cf8cae56b0ccf5f078d14631b4"}, "33cdd291-c5fe-4b20-b86f-83db3dae662f": {"doc_hash": "3c41cc3b46f6a00fd945545bdad2b93804817aa7ff47cb642c2283f207b09b04"}, "78c8725d-cf57-4905-bc95-784e867f14f2": {"doc_hash": "7d5c08db210ac53a44d7431fbc06bb489c2d4f7ba408021ff4f3d4eb7f98f85e"}, "685d61a7-b0be-4e86-a9dd-f9b5392ef58a": {"doc_hash": "d22c1f6c1be96b0fc2fcac0e94803f33db337d2817596cf74d6b20765e9ce4f6", "ref_doc_id": "7e657534-c1e3-4e90-b675-f512ede0a20c"}, "6085af4c-407b-4d57-a6ff-75efc2f1f960": {"doc_hash": "aa634a73c47418f3019253c4f876539559c95821cdd29bff2015ca207f6d35c2", "ref_doc_id": "976013c9-a49c-4ea3-b9cb-7be28fb5cfa1"}, "7f9622c6-d3d8-4635-aa59-298f70c37b47": {"doc_hash": "cdd21f0a93ce311a023f7886c63e3ebb5ba72793765bff20748c89103df756fe", "ref_doc_id": "26631ee7-d7d6-4706-b1e4-faa34d88b36d"}, "d5072a32-93b4-41ff-9219-6fb224cf72cd": {"doc_hash": "340463849f2efb6ff5906f9a77b1aae8b401948ff0bb5098e67db518175e574d", "ref_doc_id": "ea3d2c17-7e5d-4507-9425-da766ef8fc30"}, "1ac05aea-3d67-4d83-aaa2-0ee8cf2188ce": {"doc_hash": "a2edd09cfd45a099b0c8d453d113eb9e54cbfa8f2b2e7c2e98698fb3fb7093bc", "ref_doc_id": "7fdbce16-b498-499a-9e84-45ae2b35e253"}, "2f0ccb02-0a8f-41e3-a601-1298117e5ce0": {"doc_hash": "c0b07200d8d3dc22539e9f96fa0095f282708f91443e7ab4bd4aa11eb9126bdf", "ref_doc_id": "ef2ece88-80d2-4f82-b045-39192e68395c"}, "5c129972-4479-4423-931c-4657f76dc5e4": {"doc_hash": "5e7b03ddb2372b4dc3345a2f4906db37a944e210937088d3c0249c2bed37569b", "ref_doc_id": "58bc84a8-947c-4d86-9990-e4b527cae86a"}, "1ad28a4e-80f8-479e-8b3f-f5f511465ee9": {"doc_hash": "17e8f01f46557eaf1676a266e929ce00e88f0abe22b5c7503979eb3553b7542c", "ref_doc_id": "479586dc-de57-4129-83d0-956f49f509e8"}, "3a9d3cf8-b384-466d-bc57-a243ec545012": {"doc_hash": "16ccbf642d3a1a068392787e47b5dc0698f55142d91a7e2e320c11ee175e4685", "ref_doc_id": "437f9bf9-9544-4742-a310-ea7ad5bf546b"}, "34ad7e2e-526a-4d93-95fb-ffac49f11257": {"doc_hash": "69825913c4b1c1405c54df126a41a87309575aed6985cd6ff65b9df305ec9756", "ref_doc_id": "33cdd291-c5fe-4b20-b86f-83db3dae662f"}, "12d674b8-b75b-41c6-8678-6ed844e0b770": {"doc_hash": "fd0839513107999384cb498f4444ab584eff31f722bc31e47f01d02f19da7084", "ref_doc_id": "78c8725d-cf57-4905-bc95-784e867f14f2"}}, "docstore/ref_doc_info": {"7e657534-c1e3-4e90-b675-f512ede0a20c": {"node_ids": ["685d61a7-b0be-4e86-a9dd-f9b5392ef58a"], "metadata": {}}, "976013c9-a49c-4ea3-b9cb-7be28fb5cfa1": {"node_ids": ["6085af4c-407b-4d57-a6ff-75efc2f1f960"], "metadata": {}}, "26631ee7-d7d6-4706-b1e4-faa34d88b36d": {"node_ids": ["7f9622c6-d3d8-4635-aa59-298f70c37b47"], "metadata": {}}, "ea3d2c17-7e5d-4507-9425-da766ef8fc30": {"node_ids": ["d5072a32-93b4-41ff-9219-6fb224cf72cd"], "metadata": {}}, "7fdbce16-b498-499a-9e84-45ae2b35e253": {"node_ids": ["1ac05aea-3d67-4d83-aaa2-0ee8cf2188ce"], "metadata": {}}, "ef2ece88-80d2-4f82-b045-39192e68395c": {"node_ids": ["2f0ccb02-0a8f-41e3-a601-1298117e5ce0"], "metadata": {}}, "58bc84a8-947c-4d86-9990-e4b527cae86a": {"node_ids": ["5c129972-4479-4423-931c-4657f76dc5e4"], "metadata": {}}, "479586dc-de57-4129-83d0-956f49f509e8": {"node_ids": ["1ad28a4e-80f8-479e-8b3f-f5f511465ee9"], "metadata": {}}, "437f9bf9-9544-4742-a310-ea7ad5bf546b": {"node_ids": ["3a9d3cf8-b384-466d-bc57-a243ec545012"], "metadata": {}}, "33cdd291-c5fe-4b20-b86f-83db3dae662f": {"node_ids": ["34ad7e2e-526a-4d93-95fb-ffac49f11257"], "metadata": {}}, "78c8725d-cf57-4905-bc95-784e867f14f2": {"node_ids": ["12d674b8-b75b-41c6-8678-6ed844e0b770"], "metadata": {}}}, "docstore/data": {"685d61a7-b0be-4e86-a9dd-f9b5392ef58a": {"__data__": {"id_": "685d61a7-b0be-4e86-a9dd-f9b5392ef58a", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7e657534-c1e3-4e90-b675-f512ede0a20c", "node_type": "4", "metadata": {}, "hash": "64a847baaa3ecaa21b72dc03df591a4c70cc5fb6208838e35f03e6762f5af053", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Modularity, cohesion, coupling, instance methods design, tradeoffsDesign of Methods", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 83, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6085af4c-407b-4d57-a6ff-75efc2f1f960": {"__data__": {"id_": "6085af4c-407b-4d57-a6ff-75efc2f1f960", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "976013c9-a49c-4ea3-b9cb-7be28fb5cfa1", "node_type": "4", "metadata": {}, "hash": "79c825461aa23eae36e6cdd2be910aae9d11e8186da102ea24788cb97b0b043f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "What\u2019s a \u2018good\u2019 method?\uf0b4Attributes of \u201ca good method\u201d:\uf0b4Broadly, a method should be easy to understand, reuse, and maintain. \uf0b4Specifically, 1) clear intent, 2) precise pre and post conditions, 3) cohesive, 4) loosely coupled, and 5) reusable, 6)unit-testable\uf0b4Cohesion \u2013 degree of interaction within a method\uf0b4Does the method do one thing or multiple things?\uf0b4If the method does multiple things, how tightly are they related?\uf0b4Coupling \u2013 degree of dependency on external info/knowledge/capability\uf0b4Two meth", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 500, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7f9622c6-d3d8-4635-aa59-298f70c37b47": {"__data__": {"id_": "7f9622c6-d3d8-4635-aa59-298f70c37b47", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "26631ee7-d7d6-4706-b1e4-faa34d88b36d", "node_type": "4", "metadata": {}, "hash": "37f0d0fbe59508018fb59a9af2d2239cacc4b0158e9b78af273e6b58f9990a62", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ncy on external info/knowledge/capability\uf0b4Two methods are coupled if one calls the other, or share an external variable\uf0b4If a method uses parameters, it is coupled with external operational environment.  The more parameters are used, the stronger the coupling.\uf0b4A complex method may necessarily use more parameters and invoke more external methods to help mitigate the complexity (so coupling is not avoidable)    \uf0b4Loose coupling means use of less parameters and invoking fewer other methods\uf0b4Key is to", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 499, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d5072a32-93b4-41ff-9219-6fb224cf72cd": {"__data__": {"id_": "d5072a32-93b4-41ff-9219-6fb224cf72cd", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ea3d2c17-7e5d-4507-9425-da766ef8fc30", "node_type": "4", "metadata": {}, "hash": "fbf870365ebae77daf3f7484afabed39b03310c3c21e970e56e19813c24fa44b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "meters and invoking fewer other methods\uf0b4Key is to manage the balance between cohesion, coupling, and complexity while  maintaining the method\u2019s functional significance.\uf0b4URL link: https://www.youtube.com/watch?v=Df0WVO-c3Sw&t=54s", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 228, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1ac05aea-3d67-4d83-aaa2-0ee8cf2188ce": {"__data__": {"id_": "1ac05aea-3d67-4d83-aaa2-0ee8cf2188ce", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7fdbce16-b498-499a-9e84-45ae2b35e253", "node_type": "4", "metadata": {}, "hash": "c2be01cc96caa46171b190e97ee19ccee0cd88a57078f8900900258fa2c849fd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Functional Decomposition\uf0b4Decompose a system/task into smaller systems/tasks, which are further decomposed into even smaller system/task units.\uf0b4Methods are action oriented, so should objects \u2013 ask: \u201cwhat can this object do?\u201d (not what attributes we need for this object)\uf0b4Advantages of functional decomposition to allow:\uf0b4better readability if detail is abstracted away\uf0b4thinking at a higher and more abstract level\uf0b4more reusability of code (by eliminating code duplication)\uf0b4changes to be isolated\uf0b4self-d", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 500, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2f0ccb02-0a8f-41e3-a601-1298117e5ce0": {"__data__": {"id_": "2f0ccb02-0a8f-41e3-a601-1298117e5ce0", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ef2ece88-80d2-4f82-b045-39192e68395c", "node_type": "4", "metadata": {}, "hash": "38b80b0c726c8d365a7b301939771af50b0491267b0b2880b73ddfbf2e62bd42", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ng code duplication)\uf0b4changes to be isolated\uf0b4self-documentation\uf0b4public static double nthRoot(double value, int  n)\uf0b4public static Set intersect(Set s1, Set s2)\uf0b4public static int[ ] Sort(int[ ] array, Comparator comp)\uf0b4Functional decomposition also provides opportunities for discovering polymorphic functional units when tasks become parallel or scenario-dependent, or branching out", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 379, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5c129972-4479-4423-931c-4657f76dc5e4": {"__data__": {"id_": "5c129972-4479-4423-931c-4657f76dc5e4", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "58bc84a8-947c-4d86-9990-e4b527cae86a", "node_type": "4", "metadata": {}, "hash": "6b83e4898133a313ced801374bb8b6a38946698f5b56830a08ac4446ef332414", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Good Methods Start with Variable Names\uf0b4Intention-revealing method names\uf0b4Typically, method names are verbs or verb phrases, such as sort printStudentRecord,  or getSize, getList. \uf0b4Sometimes, method names can be nouns if they refer to properties of an object, like: size, length, firstElmtor sound like questions like isVisible, isOnTimeif Boolean values are returned.\uf0b4Same criteria apply to variable names:\uf0b4nTis too short for \u201cnumber of threads\u201d\uf0b4numberOfThreadsInThisProgramis too long\uf0b4numberOfThreads", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 500, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1ad28a4e-80f8-479e-8b3f-f5f511465ee9": {"__data__": {"id_": "1ad28a4e-80f8-479e-8b3f-f5f511465ee9", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "479586dc-de57-4129-83d0-956f49f509e8", "node_type": "4", "metadata": {}, "hash": "64ae9ba2c5c223a2988b7d9363eb6ed4f41772904b33d2a3b14532d1d5b3398b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "rOfThreadsInThisProgramis too long\uf0b4numberOfThreadsor even numThreadsis acceptable\uf0b4What if you don\u2019t seem to figure out a good name easily?\uf0b4Is the method doing too much?\uf0b4Is the method just a product of ad-hoc practices?", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 218, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3a9d3cf8-b384-466d-bc57-a243ec545012": {"__data__": {"id_": "3a9d3cf8-b384-466d-bc57-a243ec545012", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "437f9bf9-9544-4742-a310-ea7ad5bf546b", "node_type": "4", "metadata": {}, "hash": "3321af0ff1a966bb02e6696f4379c990387796cf8cae56b0ccf5f078d14631b4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Different Levels of Cohesion\uf0b4Levels/Categories of Cohesion on a Non-linear Scale:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 81, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "34ad7e2e-526a-4d93-95fb-ffac49f11257": {"__data__": {"id_": "34ad7e2e-526a-4d93-95fb-ffac49f11257", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "33cdd291-c5fe-4b20-b86f-83db3dae662f", "node_type": "4", "metadata": {}, "hash": "3c41cc3b46f6a00fd945545bdad2b93804817aa7ff47cb642c2283f207b09b04", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. Coincidental 2. Logical Cohesion\uf0b4A method has coincidental cohesion if it performs multiple, unrelated actions\uf0b4Issues\uf0b4not likely reusable, not maintainable\uf0b4Unpredictable impact going forward\uf0b4Bad for unit tests\uf0b4Easy to address\uf0b4Break it into separate methods, integrate the pieces into other methods, or avoid in the first place\n\uf07dA method has logical cohesion when it performs a series of actions, but only one is selected at a time by the calling module(conditionals are present), such as:\uf07drunApp(u", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 500, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "12d674b8-b75b-41c6-8678-6ed844e0b770": {"__data__": {"id_": "12d674b8-b75b-41c6-8678-6ed844e0b770", "embedding": null, "metadata": {}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "78c8725d-cf57-4905-bc95-784e867f14f2", "node_type": "4", "metadata": {}, "hash": "7d5c08db210ac53a44d7431fbc06bb489c2d4f7ba408021ff4f3d4eb7f98f85e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "odule(conditionals are present), such as:\uf07drunApp(userCmd)\uf07ddraw(shapeName)\uf07dcalculate(algorithm, input)\uf07dIssues\uf07dLittle clarity on what method does exactly\uf07dTightly coupled with contextual code (do I call the method at the right place using correct arguments? \u2013 less freedom for code modifiability)\uf07dReusability is low\uf07dFactory methods are of this kind, but we have less concerns because of the predictability of such methods.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 419, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}}}