{"docstore/metadata": {"ff35668c-7487-4660-8a0d-0cb055a2d07f": {"doc_hash": "1153cd9ee8cd333a1a4a97d3036840985dff51c0d2ee81fbf1fab7ef945fd661"}, "8a3436b7-4c04-4ca2-a7c4-0a3da7f706e2": {"doc_hash": "34e1ac4ff14ab7a70d6a41caa29432c2f2b39f11dfa1bb3600db7b209c315f13"}, "5a343a09-5ae1-474c-a5a2-862405289d61": {"doc_hash": "590aef4ec4eaf269e94c1bcf74c885f78093c0995fecc18c8f1198c63b003b4c"}, "8d26b962-3a31-4990-b256-e74192788475": {"doc_hash": "abb25864cc3098589b9c783323f1e1e22210ec8543fcc75ee36ef8cabb1a456e"}, "807a14da-efe4-4c96-bdf8-215b54b995fb": {"doc_hash": "f28456f75951f8d34d4acc22c01dad6365f8b980ed062f0447765135e8693d54"}, "f4380813-f77f-4996-8b3c-d97782f50728": {"doc_hash": "052ffe8e34add93a883e0f806ba9c859bb102f56010d9b0ed7ea16ff8e93979a"}, "7a74e881-444d-4783-8b08-46915abfbf15": {"doc_hash": "603e29a42b6fcac1e9240abe97f2a65dbb38e48d9888ce083d5e9a7969ce3f8d"}, "2e13ac66-9d30-4e55-a0fb-86c2b75eefc1": {"doc_hash": "ac037de6cb223899103073e8d7a0c3d53d9f192981fe6e7a4cc833d481c14792"}, "b1c8312d-672c-4fdf-9bf5-ab852963e1ef": {"doc_hash": "dce0a9ef1ce4fdb3cc8f9e2fba40e7d5184933b6aeabc7d8528ec4643211771b"}, "a5ac8cb6-aff9-4246-8b66-19b315f86e6d": {"doc_hash": "594de39fc0ebb064a49d54a72c010ea9229cfad71db3c5fddca7f39fdecda5b5"}, "541b2108-6122-435a-afae-cf5f0f7ce135": {"doc_hash": "04dad36a3e566ef31496dab0213ee68b31683c7452cce2c516683267756f8e9c"}, "4b02d68c-fb9b-4def-8660-ffb8454e55d0": {"doc_hash": "b8c63ad9e2a80e3a0119070a7c7d10e666258475548137c6d47e4609819868be"}, "dec83b5b-ae14-4a88-b9ff-4505780fb698": {"doc_hash": "e1e7078b59da742b15e9b48a4f7776c7efe386b310d73b5a2bfbbe81b66fd4ba"}, "e70f0613-94ca-43a6-b4df-6b3630fa7245": {"doc_hash": "9e382d221fbf1e7137cfe2116f8bcb1f7b249e0fea3e529020bc2cedb343f0ef"}, "b5a6ed45-925d-4648-a49a-d3643e872c3c": {"doc_hash": "76ab8d81541295edd1b9bce2ea43d7829817ef56f7804f733e37ce6c88ebe3f2"}, "e1c1f1aa-1b7b-4966-9eca-1c839ecc1a77": {"doc_hash": "e28684997637f224ab8937cd0b946b2a1f2819a7029455c3bda84e0449feef64"}, "28d71a44-f423-41a9-8e43-30e5a60337b5": {"doc_hash": "3b2aa71444a6cc0af138fa6763fac78504c24e331ac56b1cf527714af775502b", "ref_doc_id": "ff35668c-7487-4660-8a0d-0cb055a2d07f"}, "b3a52cd1-e64e-4a5b-88bf-4934dc9a7aeb": {"doc_hash": "e4d5fe34f991c3e6122cb40ceb8883e59ae2d989c4730f60a9daeadd25fe9df5", "ref_doc_id": "8a3436b7-4c04-4ca2-a7c4-0a3da7f706e2"}, "d190811e-e179-4dc0-a52b-963d858d56c6": {"doc_hash": "676248697464d24667aa5bf1230050cf82f834b2dd7254a4b8ccaff1c7044df3", "ref_doc_id": "5a343a09-5ae1-474c-a5a2-862405289d61"}, "e8f1ee26-eadc-4616-8f9e-0d4a9592613d": {"doc_hash": "0ff256ef031e341801cca20ab24b7450dff618ab1c497d1116eea7f01ce9848b", "ref_doc_id": "8d26b962-3a31-4990-b256-e74192788475"}, "279e5cf5-93ca-4119-9895-a6ce0f8e2882": {"doc_hash": "e01372e10fa1c04b1ff28e44eedf624c4ffc0fb8c29fa2d30b879ca2b4914d00", "ref_doc_id": "807a14da-efe4-4c96-bdf8-215b54b995fb"}, "42eec23c-1ff8-4330-a292-02ab2c0f4c40": {"doc_hash": "aaae07a022b7226d9ebd391f5382b3e805bd6861222499af2cbce9e54e7b861e", "ref_doc_id": "f4380813-f77f-4996-8b3c-d97782f50728"}, "0de58008-7250-45e5-b21b-8f3f4f619411": {"doc_hash": "fdbe6729c719e0617246b76dd99b1519b4379726e8a8729ed60519540287c713", "ref_doc_id": "7a74e881-444d-4783-8b08-46915abfbf15"}, "89880282-e70e-4f1d-9337-ef6bf4b6b21d": {"doc_hash": "96f2cfc862ceaf63e74e71ef7c611d8c8752eea770032ef56b522fc52521f3c5", "ref_doc_id": "2e13ac66-9d30-4e55-a0fb-86c2b75eefc1"}, "51efc24b-a78d-4d65-a025-53af50cc587a": {"doc_hash": "6dcc84fbe82bfefcac7998273465ef45d09c48ed5b072d28ee74023aee64ec83", "ref_doc_id": "b1c8312d-672c-4fdf-9bf5-ab852963e1ef"}, "5bcaf832-a14e-46ce-9a80-c418076bc309": {"doc_hash": "5703416d5ce3872462a98cdfe60a0ff39714a75d73c25a8eff365d896e8e81d0", "ref_doc_id": "a5ac8cb6-aff9-4246-8b66-19b315f86e6d"}, "dc1cbc80-d10c-43e0-a627-4f49043d440d": {"doc_hash": "714443f3a7b0bd6a9b8d40faa65265438ea41360e7872f971d0f28abba93c702", "ref_doc_id": "541b2108-6122-435a-afae-cf5f0f7ce135"}, "895a9c02-5677-49f2-b5fb-ffdccb440872": {"doc_hash": "56c4e55a461bf06d8c0363ab8f3462f872bcd5a85e7bcf9d89b855dd5b125218", "ref_doc_id": "4b02d68c-fb9b-4def-8660-ffb8454e55d0"}, "680d445b-806b-4d17-bfc3-2ea33372ea97": {"doc_hash": "ba854995753cf9de0bda32d6963aad4dad19fccda210bf1c0f849f411b97f14b", "ref_doc_id": "dec83b5b-ae14-4a88-b9ff-4505780fb698"}, "4e16a9f2-26a2-459c-97af-c03ebfcd2eca": {"doc_hash": "98ab51b0602c9408590af59af6cd0d771cb79763081200026c07815756e0e7b5", "ref_doc_id": "e70f0613-94ca-43a6-b4df-6b3630fa7245"}, "82e51ebe-ef57-44ea-8903-c8a8b623a59d": {"doc_hash": "91b72d1a54d7c0d4143a2c10f1e50f0d457a25bf6682f7eb88d1b4d1ebcbe33c", "ref_doc_id": "b5a6ed45-925d-4648-a49a-d3643e872c3c"}, "b5d96494-bb31-43ca-b30a-323b71cabc03": {"doc_hash": "cd2d31f6a3bc264cc881a4e6b4527b6c2705d53c4bcd6c0646db247f6dd0d042", "ref_doc_id": "e1c1f1aa-1b7b-4966-9eca-1c839ecc1a77"}}, "docstore/ref_doc_info": {"ff35668c-7487-4660-8a0d-0cb055a2d07f": {"node_ids": ["28d71a44-f423-41a9-8e43-30e5a60337b5"], "metadata": {"page_label": "1", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}}, "8a3436b7-4c04-4ca2-a7c4-0a3da7f706e2": {"node_ids": ["b3a52cd1-e64e-4a5b-88bf-4934dc9a7aeb"], "metadata": {"page_label": "2", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}}, "5a343a09-5ae1-474c-a5a2-862405289d61": {"node_ids": ["d190811e-e179-4dc0-a52b-963d858d56c6"], "metadata": {"page_label": "3", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}}, "8d26b962-3a31-4990-b256-e74192788475": {"node_ids": ["e8f1ee26-eadc-4616-8f9e-0d4a9592613d"], "metadata": {"page_label": "4", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}}, "807a14da-efe4-4c96-bdf8-215b54b995fb": {"node_ids": ["279e5cf5-93ca-4119-9895-a6ce0f8e2882"], "metadata": {"page_label": "5", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}}, "f4380813-f77f-4996-8b3c-d97782f50728": {"node_ids": ["42eec23c-1ff8-4330-a292-02ab2c0f4c40"], "metadata": {"page_label": "6", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}}, "7a74e881-444d-4783-8b08-46915abfbf15": {"node_ids": ["0de58008-7250-45e5-b21b-8f3f4f619411"], "metadata": {"page_label": "7", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}}, "2e13ac66-9d30-4e55-a0fb-86c2b75eefc1": {"node_ids": ["89880282-e70e-4f1d-9337-ef6bf4b6b21d"], "metadata": {"page_label": "8", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}}, "b1c8312d-672c-4fdf-9bf5-ab852963e1ef": {"node_ids": ["51efc24b-a78d-4d65-a025-53af50cc587a"], "metadata": {"page_label": "9", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}}, "a5ac8cb6-aff9-4246-8b66-19b315f86e6d": {"node_ids": ["5bcaf832-a14e-46ce-9a80-c418076bc309"], "metadata": {"page_label": "10", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}}, "541b2108-6122-435a-afae-cf5f0f7ce135": {"node_ids": ["dc1cbc80-d10c-43e0-a627-4f49043d440d"], "metadata": {"page_label": "11", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}}, "4b02d68c-fb9b-4def-8660-ffb8454e55d0": {"node_ids": ["895a9c02-5677-49f2-b5fb-ffdccb440872"], "metadata": {"page_label": "12", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}}, "dec83b5b-ae14-4a88-b9ff-4505780fb698": {"node_ids": ["680d445b-806b-4d17-bfc3-2ea33372ea97"], "metadata": {"page_label": "13", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}}, "e70f0613-94ca-43a6-b4df-6b3630fa7245": {"node_ids": ["4e16a9f2-26a2-459c-97af-c03ebfcd2eca"], "metadata": {"page_label": "14", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}}, "b5a6ed45-925d-4648-a49a-d3643e872c3c": {"node_ids": ["82e51ebe-ef57-44ea-8903-c8a8b623a59d"], "metadata": {"page_label": "15", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}}, "e1c1f1aa-1b7b-4966-9eca-1c839ecc1a77": {"node_ids": ["b5d96494-bb31-43ca-b30a-323b71cabc03"], "metadata": {"page_label": "16", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}}}, "docstore/data": {"28d71a44-f423-41a9-8e43-30e5a60337b5": {"__data__": {"id_": "28d71a44-f423-41a9-8e43-30e5a60337b5", "embedding": null, "metadata": {"page_label": "1", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ff35668c-7487-4660-8a0d-0cb055a2d07f", "node_type": "4", "metadata": {"page_label": "1", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "hash": "1153cd9ee8cd333a1a4a97d3036840985dff51c0d2ee81fbf1fab7ef945fd661", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Modularity, cohesion, coupling, instance methods design, tradeoffsDesign of Methods", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 83, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b3a52cd1-e64e-4a5b-88bf-4934dc9a7aeb": {"__data__": {"id_": "b3a52cd1-e64e-4a5b-88bf-4934dc9a7aeb", "embedding": null, "metadata": {"page_label": "2", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8a3436b7-4c04-4ca2-a7c4-0a3da7f706e2", "node_type": "4", "metadata": {"page_label": "2", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "hash": "34e1ac4ff14ab7a70d6a41caa29432c2f2b39f11dfa1bb3600db7b209c315f13", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "What\u2019s a \u2018good\u2019 method?\uf0b4Attributes of \u201ca good method\u201d:\uf0b4Broadly, a method should be easy to understand, reuse, and maintain. \uf0b4Specifically, 1) clear intent, 2) precise pre and post conditions, 3) cohesive, 4) loosely coupled, and 5) reusable, 6)unit-testable\uf0b4Cohesion \u2013 degree of interaction within a method\uf0b4Does the method do one thing or multiple things?\uf0b4If the method does multiple things, how tightly are they related?\uf0b4Coupling \u2013 degree of dependency on external info/knowledge/capability\uf0b4Two methods are coupled if one calls the other, or share an external variable\uf0b4If a method uses parameters, it is coupled with external operational environment.  The more parameters are used, the stronger the coupling.\uf0b4A complex method may necessarily use more parameters and invoke more external methods to help mitigate the complexity (so coupling is not avoidable)    \uf0b4Loose coupling means use of less parameters and invoking fewer other methods\uf0b4Key is to manage the balance between cohesion, coupling, and complexity while  maintaining the method\u2019s functional significance.\uf0b4URL link: https://www.youtube.com/watch?v=Df0WVO-c3Sw&t=54s", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1128, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d190811e-e179-4dc0-a52b-963d858d56c6": {"__data__": {"id_": "d190811e-e179-4dc0-a52b-963d858d56c6", "embedding": null, "metadata": {"page_label": "3", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5a343a09-5ae1-474c-a5a2-862405289d61", "node_type": "4", "metadata": {"page_label": "3", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "hash": "590aef4ec4eaf269e94c1bcf74c885f78093c0995fecc18c8f1198c63b003b4c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Functional Decomposition\uf0b4Decompose a system/task into smaller systems/tasks, which are further decomposed into even smaller system/task units.\uf0b4Methods are action oriented, so should objects \u2013 ask: \u201cwhat can this object do?\u201d (not what attributes we need for this object)\uf0b4Advantages of functional decomposition to allow:\uf0b4better readability if detail is abstracted away\uf0b4thinking at a higher and more abstract level\uf0b4more reusability of code (by eliminating code duplication)\uf0b4changes to be isolated\uf0b4self-documentation\uf0b4public static double nthRoot(double value, int  n)\uf0b4public static Set intersect(Set s1, Set s2)\uf0b4public static int[ ] Sort(int[ ] array, Comparator comp)\uf0b4Functional decomposition also provides opportunities for discovering polymorphic functional units when tasks become parallel or scenario-dependent, or branching out", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 829, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e8f1ee26-eadc-4616-8f9e-0d4a9592613d": {"__data__": {"id_": "e8f1ee26-eadc-4616-8f9e-0d4a9592613d", "embedding": null, "metadata": {"page_label": "4", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8d26b962-3a31-4990-b256-e74192788475", "node_type": "4", "metadata": {"page_label": "4", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "hash": "abb25864cc3098589b9c783323f1e1e22210ec8543fcc75ee36ef8cabb1a456e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Good Methods Start with Variable Names\uf0b4Intention-revealing method names\uf0b4Typically, method names are verbs or verb phrases, such as sort printStudentRecord,  or getSize, getList. \uf0b4Sometimes, method names can be nouns if they refer to properties of an object, like: size, length, firstElmtor sound like questions like isVisible, isOnTimeif Boolean values are returned.\uf0b4Same criteria apply to variable names:\uf0b4nTis too short for \u201cnumber of threads\u201d\uf0b4numberOfThreadsInThisProgramis too long\uf0b4numberOfThreadsor even numThreadsis acceptable\uf0b4What if you don\u2019t seem to figure out a good name easily?\uf0b4Is the method doing too much?\uf0b4Is the method just a product of ad-hoc practices?", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 668, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "279e5cf5-93ca-4119-9895-a6ce0f8e2882": {"__data__": {"id_": "279e5cf5-93ca-4119-9895-a6ce0f8e2882", "embedding": null, "metadata": {"page_label": "5", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "807a14da-efe4-4c96-bdf8-215b54b995fb", "node_type": "4", "metadata": {"page_label": "5", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "hash": "f28456f75951f8d34d4acc22c01dad6365f8b980ed062f0447765135e8693d54", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Different Levels of Cohesion\uf0b4Levels/Categories of Cohesion on a Non-linear Scale:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 81, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "42eec23c-1ff8-4330-a292-02ab2c0f4c40": {"__data__": {"id_": "42eec23c-1ff8-4330-a292-02ab2c0f4c40", "embedding": null, "metadata": {"page_label": "6", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f4380813-f77f-4996-8b3c-d97782f50728", "node_type": "4", "metadata": {"page_label": "6", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "hash": "052ffe8e34add93a883e0f806ba9c859bb102f56010d9b0ed7ea16ff8e93979a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. Coincidental 2. Logical Cohesion\uf0b4A method has coincidental cohesion if it performs multiple, unrelated actions\uf0b4Issues\uf0b4not likely reusable, not maintainable\uf0b4Unpredictable impact going forward\uf0b4Bad for unit tests\uf0b4Easy to address\uf0b4Break it into separate methods, integrate the pieces into other methods, or avoid in the first place\n\uf07dA method has logical cohesion when it performs a series of actions, but only one is selected at a time by the calling module(conditionals are present), such as:\uf07drunApp(userCmd)\uf07ddraw(shapeName)\uf07dcalculate(algorithm, input)\uf07dIssues\uf07dLittle clarity on what method does exactly\uf07dTightly coupled with contextual code (do I call the method at the right place using correct arguments? \u2013 less freedom for code modifiability)\uf07dReusability is low\uf07dFactory methods are of this kind, but we have less concerns because of the predictability of such methods.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 869, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0de58008-7250-45e5-b21b-8f3f4f619411": {"__data__": {"id_": "0de58008-7250-45e5-b21b-8f3f4f619411", "embedding": null, "metadata": {"page_label": "7", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7a74e881-444d-4783-8b08-46915abfbf15", "node_type": "4", "metadata": {"page_label": "7", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "hash": "603e29a42b6fcac1e9240abe97f2a65dbb38e48d9888ce083d5e9a7969ce3f8d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "3. Temporal Cohesion   4. Procedural Cohesion \uf0b4A method is of temporal cohesion when it performs a series of actions related in time\uf0b4Example\uf0b4open various files, initialize data structures, read initial data (init() for card games)\uf0b4What we typically do in a constructor.\uf0b4Issues\uf0b4Actions of the module are weakly related to one another.  \uf0b4Unlikely to be reused\n\uf07dA method is of procedural cohesion if it performs a series of actions related by a procedure/algorithm to be followed by the product (we often write such methods to provide logical clarity)\uf07dExample\uf07dread part number and update repair record on master file\uf07dRead database records and update labels\uf07dCreate panel, set panel layout, set border, add buttons, add listeners. \uf07dIssues:\uf07ddifficult to understand without a context\uf07dReusability is likely low", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 802, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "89880282-e70e-4f1d-9337-ef6bf4b6b21d": {"__data__": {"id_": "89880282-e70e-4f1d-9337-ef6bf4b6b21d", "embedding": null, "metadata": {"page_label": "8", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2e13ac66-9d30-4e55-a0fb-86c2b75eefc1", "node_type": "4", "metadata": {"page_label": "8", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "hash": "ac037de6cb223899103073e8d7a0c3d53d9f192981fe6e7a4cc833d481c14792", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "5. Communicational Cohesion\uf0b4Module performs a series of actions related by a procedure/algorithm to be followed in a process, but in addition, all the actions operate on the same data \uf0b4Examples\uf0b4updateAuditTrail: update record in database and write itto audit trail\uf0b4getCurrentCoordinates: calculate new coordinates and send themto terminal\uf0b4Benefit:\uf0b4more likely to be reused\uf0b4easy to understand\uf0b4Better stability", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 408, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "51efc24b-a78d-4d65-a025-53af50cc587a": {"__data__": {"id_": "51efc24b-a78d-4d65-a025-53af50cc587a", "embedding": null, "metadata": {"page_label": "9", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b1c8312d-672c-4fdf-9bf5-ab852963e1ef", "node_type": "4", "metadata": {"page_label": "9", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "hash": "dce0a9ef1ce4fdb3cc8f9e2fba40e7d5184933b6aeabc7d8528ec4643211771b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "6. Informational/Sequential Cohesion\uf0b4A module has informational/sequential cohesion if it performs several actions\uf0b4Each has its own entry point with independent code\uf0b4One action uses the result of another, so, actions are unbreakable\uf0b4All performed on the same data structure\uf0b4Easy to understand and maintain, more likely to be reusedCalculate trajectoryandPredict targetRadarinfotarget identification, location, etc.This method is already in good cohesion, but we might still ask whether further decomposition along the dash line still makes good sense:\u2022Would trajectory calculation be useful in other situations?\u2022Can target be predicted with trajectory being calculated in other ways?", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 683, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5bcaf832-a14e-46ce-9a80-c418076bc309": {"__data__": {"id_": "5bcaf832-a14e-46ce-9a80-c418076bc309", "embedding": null, "metadata": {"page_label": "10", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a5ac8cb6-aff9-4246-8b66-19b315f86e6d", "node_type": "4", "metadata": {"page_label": "10", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "hash": "594de39fc0ebb064a49d54a72c010ea9229cfad71db3c5fddca7f39fdecda5b5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "7. Functional Cohesion\uf0b4Module with functional cohesion performs exactly one well-defined action, although there may be many statements.\uf0b4Examples\uf0b4get temperature of furnace\uf0b4calculate sales commission\uf0b4All data structures\u2019 service methods\uf0b4Instance methods are often of this sort of cohesion\u2026 many simply change objects\u2019 states: stu.addClass(classCode), enrollment.removeWaitList(classCode), \u2026\uf0b4Caution: enrollment.getWaitlist() \u2013 read-only, checkout.processPayment(payment info) \u2013 possibly complex", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 493, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dc1cbc80-d10c-43e0-a627-4f49043d440d": {"__data__": {"id_": "dc1cbc80-d10c-43e0-a627-4f49043d440d", "embedding": null, "metadata": {"page_label": "11", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "541b2108-6122-435a-afae-cf5f0f7ce135", "node_type": "4", "metadata": {"page_label": "11", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "hash": "04dad36a3e566ef31496dab0213ee68b31683c7452cce2c516683267756f8e9c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Methods Coupling\uf0b4A fact: The less a method is cohesive, the tighter the coupling would be with a calling method\uf0b4Coincidental cohesion (ad-hoc cohesion) \u2013 would be coupled with the content of the code around it (content coupling)\uf0b4Logic cohesion \u2013 caller controls where to call and what argument to pass (control coupling)\uf0b4Communication cohesion \u2013 data in (arguments) and data out (what method returns); method can be treated as a black-box (data coupling)\uf0b4Two coupling situations through data sharing\uf0b4Share external data (common coupling), which is more consequential than sharing instance data (sharing instance data is expected, but invariants should be enforced in instance methods)\uf0b4Passing more data than needed (often due to convenience) creates coupling (stamp coupling) that can be easily avoided.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 803, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "895a9c02-5677-49f2-b5fb-ffdccb440872": {"__data__": {"id_": "895a9c02-5677-49f2-b5fb-ffdccb440872", "embedding": null, "metadata": {"page_label": "12", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4b02d68c-fb9b-4def-8660-ffb8454e55d0", "node_type": "4", "metadata": {"page_label": "12", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "hash": "b8c63ad9e2a80e3a0119070a7c7d10e666258475548137c6d47e4609819868be", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Cohesion/Coupling Examples \uf0b4Logic cohesion/control coupling\uf0b4void doThisOrDoThat(booleanflag){if ( flag ){ \u2026twenty lines of code to do this\u2026}else {\u2026twenty lines of code to do that\u2026 } }\uf0b4Better? void doThisOrDoThat(boolean flag){if ( flag ) doThis();  else \u2026twenty lines of code to do that\u2026 }\uf0b4Better?   void doThisOrDoThat(booleanflag){if ( flag ) doThis();  else doThat()  } \uf071More analysis needed \u2026. \nGood methods potentially:displayTimeOfArrival (flightNumber);computeGrossPay (hoursWorked, payRate);jobQueue.getJobWithHighestPriority();Danger of method side effect! Common coupling effect\u2026int x = 10;int  getVal(int a){ return a + x++; }This \u201capparent\u201d equality becomes false!getVal(3) == getVal(3) ?methodX(){\u2026 boolean isOk = processData(dataInfo, \u201cupdate\u201d); \u2026 if( !isOk ){ \u2026 } \u2026. }auditTranscript(Collection students, String studentId){ \u2026 }void method(int arg){while(instanceVar == 0){if(arg > 25) methodX(); else mathodY();   }", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 930, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "680d445b-806b-4d17-bfc3-2ea33372ea97": {"__data__": {"id_": "680d445b-806b-4d17-bfc3-2ea33372ea97", "embedding": null, "metadata": {"page_label": "13", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dec83b5b-ae14-4a88-b9ff-4505780fb698", "node_type": "4", "metadata": {"page_label": "13", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "hash": "e1e7078b59da742b15e9b48a4f7776c7efe386b310d73b5a2bfbbe81b66fd4ba", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Design Inclusion, Exclusion, and Tradeoffs\uf0b4Specificity vs. Generality:  description of a method should be sufficiently specific to exclude implementations that are unacceptable but sufficiently generalto allow all implementations that are acceptable. \uf0b4pre/post conditions must serve the needs for specificity and generality\uf0b4Seeking tradeoffs: readability vs. complexity vs. efficiency  \uf0b4for( j = 0, j < arr.length; j++ ){for(k = 0; k < arr[j].length; k++)  sum += grades[j, k]; }OR: for(j = 0, j < courses.length; j++)  sum += courses[j].getGradesSum();\uf0b4for(j = 0, j < stores.length; j++) change =  stores[j].getMonthlySales(month).getPercentageChange();OR:   for(j = 0, j < stores.length; j++) change= stores[j].getMonthlySalesPercentageChange(month);", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 752, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4e16a9f2-26a2-459c-97af-c03ebfcd2eca": {"__data__": {"id_": "4e16a9f2-26a2-459c-97af-c03ebfcd2eca", "embedding": null, "metadata": {"page_label": "14", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e70f0613-94ca-43a6-b4df-6b3630fa7245", "node_type": "4", "metadata": {"page_label": "14", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "hash": "9e382d221fbf1e7137cfe2116f8bcb1f7b249e0fea3e529020bc2cedb343f0ef", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Design Robustness & Reliability\uf0b4Robustness \uf0b4the ability of a method to weather any input data, some of which might be invalid \u2013Essentially, it refers to the method's robustness and error-handling capabilities when dealing with different types of inputs\uf0b4Reliability\uf0b4always producing correct results in all operational conditions\uf0b4Robustness and reliability require precise pre and post conditions to ensure correct behavior of a method \uf0b4Preconditions: a) operational condition (when/where/whyis the method called), b) validity of the data method uses \uf0b4Postconditions: a) operational condition (if any) when method call ends, b) What information has been altered or created after the method call ends\uf0b4How to improve robustness and reliability?\uf0b4Mindful on the correct ranges of instance variables (class invariant) \uf0b4Use \u201cassert\u201d statements to ensure preconditions (and class invariants)\uf0b4Good code needs fewer comments; comment only what the code doesn\u2019t tell\uf0b4Deal with exceptions as opposed to throwing them", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1003, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "82e51ebe-ef57-44ea-8903-c8a8b623a59d": {"__data__": {"id_": "82e51ebe-ef57-44ea-8903-c8a8b623a59d", "embedding": null, "metadata": {"page_label": "15", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b5a6ed45-925d-4648-a49a-d3643e872c3c", "node_type": "4", "metadata": {"page_label": "15", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "hash": "76ab8d81541295edd1b9bce2ea43d7829817ef56f7804f733e37ce6c88ebe3f2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Case Study \u2013Override:  equals(Object)\uf0b4Java API states:  \u201cThe equalsmethod implements an equivalence relation:\uf0b4It\u2019s reflexive: for any x, x.equals(x)returns true.\uf0b4It\u2019s symmetric:for any xand y, if x.equals(y)returns true, so does y.equals(x).\uf0b4It\u2019s transitive:   for any x, y, and z, if x.equals(y)andy.equals(z)are both true, so is x.equals(z).\n\uf07dConsider the Triangle class \u2013 two triangles are equal if their vertices are equal\uf07dpublic boolean equals(Object obj) {if( obj == null ) return false;if( obj == this ) return true; if(obj.getClass() !=  this.getClass()) return false;if(!super.equals(obj)) return false;   ColoredTriangle otherT riangle = (ColoredTriangle) obj;return      this.color.equals(otherTriangle.color);  }Behavior of \u201cequals\u201d in supperclass may not be maintained: Triangle t1 = new Triangle(p1, p2, p3); Triangle t2 = new ColoredTriangle(p1, p2, p3, \u201cred\u201d);t1.equals(t2) returns true, but t2.equals(t1) returns false, \uf0e0symmetry is violated.Solution: 1) Override Object\u2019s equals method only in a super class, or 2) allow multiple classes in an inheritance chain to override the \u201cequals\u201d method; but accept the fact that the Liskov Substitution Principle will be violated.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1189, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b5d96494-bb31-43ca-b30a-323b71cabc03": {"__data__": {"id_": "b5d96494-bb31-43ca-b30a-323b71cabc03", "embedding": null, "metadata": {"page_label": "16", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e1c1f1aa-1b7b-4966-9eca-1c839ecc1a77", "node_type": "4", "metadata": {"page_label": "16", "file_name": "Chapter 4-Methods Design.pdf", "file_path": "c:\\HackJam-CodeMafia-Project\\backend\\MYDesk_AI\\User_Uploads\\Chapter 4-Methods Design.pdf", "file_type": "application/pdf", "file_size": 739099, "creation_date": "2025-10-01", "last_modified_date": "2025-04-09"}, "hash": "e28684997637f224ab8937cd0b946b2a1f2819a7029455c3bda84e0449feef64", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Code Refactoring\uf0b4\u201cRefactoring\u201d is a process of modifying working code to make it more readable, sustainable, or elegant without changing its external behavior.\uf0b4Most high-end IDEshave built-in support for refactoring.\uf0b4Refactoring Activities:\uf0b4Rename a method or a variable \uf0b4Introduce new types/interface when opportunities for polymorphism identified\uf0b4Replace a variable with a query method\uf0b4Extract methods into a superclass\uf0b4Delegation of responsibilities\uf0b4Change of visibility (of variables or methods)\uf0b4Code refactoring can\u2019t rescue a poor design, and it can\u2019t help with structural alteration.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 590, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}}}